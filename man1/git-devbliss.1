.TH GIT-DEVBLISS 1 "FEB 2013" Linux "User Manuals"
.SH NAME
git-devbliss \- git extensions for best practices at devbliss
.SH SYNOPSIS
.B git devbliss [feature | bug | refactor | research]
.I DESCRIPTION

.B git devbliss hotfix VERSION DESCRIPTION

.B git devbliss finish [BASE_BRANCH]

.B git devbliss release VERSION

.B git devbliss status

.B git devbliss delete [-f]

.B git devbliss issue [TITLE]

.B git devbliss review PULL-REQUEST-ID

.B git devbliss merge-button PULL-REQUEST-ID

.B git devbliss close-button PULL-REQUEST-ID

.SH DESCRIPTION
.B git-devbliss
implements simple
.BR git (1)
commands according
to best practices at devbliss. a detailed description
of the workflow that is supported by git-devbliss can
be found at

.B https://github.com/devbliss/workflow

.SH OPTIONS
.I "feature bug refactor research"

        Branch from master (normal branches). Specifically, this
        command checks out the master branch and, from it, creates
        a new branch with the prefix feature, bug, refactor, or
        research and pushes the new branch upstream.

.I "hotfix"

        Branch from a tag (fix a bug in an already released version).
        Otherwise this command is similar to feature, bug, refactor,
        and research.

.I "finish"

        Open a pull request for the current branch. This command will
        first check whether it is run on the top level of the
        repository, so that it can execute 'make changelog' and 'make
        version'. If there is no makefile or the changelog target is
        missing, you will get a warning. Afterwards, the current
        branch is pushed and the pull request is opened on github. You
        will be given a link to the pull request. The finish command
        will also execute the "finish" target, if any.
        Optionally a base branch can be specified (e.g. a release branch)
        in case the resulting pull request is not mend to be merged in
        the master branch.

.I "release"

        Create a new tag, commit and push. After executing the 'version'
        make target and commiting any changes that may have occured as
        a result of it, this command creates a release commit and a tag.

.I "status"

        List branches, pull requests, and issues.

.I "delete"

        Delete the current branch on github.com (does not delete the
        local branch).

.I "issue"

        Quickly post a new issue to GitHub.

        Usage:
                git devbliss issue
                git devbliss issue "bug description"

        In the first case, the command will ask for both a title and
        a body. The body is read similar to how the 'mail' program
        works. On an empty line at the end of the message, type ^D to
        end the program and post the issue. Type ^C at any point to
        cancel.

.I "review"

        Review a pull request with the given id. The id can be discovered
        using the git devbliss status command.

.I "merge-button"

        Merge a pull request with the given id. The id can be discovered
        using the git devbliss status command.

.I "close-button"

        Close a pull request with the given id without merging. The id can
        be discovered using the git devbliss status command.

.I "-v --version"

        Print version number and exit.

.SH FILES
.I /usr/bin/github-devbliss
.RS
Generic GitHub API client used for issuing pull-requests
and listing information about repositories.
.SH BUGS
Bugs can be filed at

.B https://github.com/devbliss/workflow/issues

.SH AUTHOR
Team Schneemann <team_schneemann@devbliss.com>
.SH "SEE ALSO"
.BR git (1)
